{"version":3,"sources":["../src/stream_handler.js"],"names":[],"mappings":"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","file":"stream_handler.js","sourcesContent":["import moment from 'moment';\nimport {Observable} from 'vendor/npm/rxjs/Rx';\nimport 'vendor/npm/rxjs/add/observable/interval';\nimport {Subject} from 'vendor/npm/rxjs/Subject';\n\nexport class StreamHandler {\n\n  constructor(options, datasource) {\n    this.options = options;\n    this.ds = datasource;\n    this.subject = new Subject();\n    this.pause = false;\n  }\n\n  start() {\n    this.pause = false;\n\n    if (this.source) {\n      return;\n    }\n\n    var target = this.options.targets[0];\n\n    console.log('StreamHandler: start()');\n\n    var interval = moment.duration(parseInt(target.interval, 10), 'seconds').asMilliseconds();\n    if (interval < 1000) {\n      interval = 1000;\n    }\n\n    var self = this;\n    this.source = Observable.interval(interval)\n    .flatMap(function () {\n      var promise = new Promise(resolve => {\n        if (target.metrics.length === 0 || self.pause) {\n          return resolve([]);\n        }\n\n        self.ds.request({ method: 'get', url: '/metrics' }).then(res => {\n          var targetMetrics = target.metrics.map(m => {\n            return m.name;\n          });\n          var result = res.data.split(/\\n/).filter(l => {\n            return l.indexOf('#') !== 0;\n          }).map(l => {\n            return l.split(/[{ ]/);\n          }).filter(m => {\n            return targetMetrics.includes(m[0]);\n          });\n          return resolve(result);\n        });\n      });\n      return Observable.fromPromise(promise);\n    })\n    .subscribe(\n      function (data) {\n        self.onNext.bind(self)(data);\n      },\n      function (error) {\n        self.onError.bind(self)(error);\n      },\n      function () {\n        self.onCompleted.bind(self)();\n      }\n    );\n\n    this.metrics = {};\n  }\n\n  onNext(data) {\n    this.processMetricEvent(data);\n  }\n\n  onError(error) {\n    console.log('stream error', error);\n  }\n\n  onCompleted() {\n    console.log('stream completed');\n  }\n\n  stop() {\n    console.log('Forcing event stream stop');\n    if (this.source) {\n      // TODO: stop timer\n      this.pause = true;\n    }\n    this.source = null;\n  }\n\n  subscribe(options) {\n    return this.subject.subscribe(options);\n  }\n\n  processMetricEvent(data) {\n    var endTime = new Date().getTime();\n    var startTime = endTime - (60 * 1 * 1000);\n    var seriesList = [];\n\n    for (var i = 0; i < data.length; i++) {\n      var point = data[i];\n      var series = this.metrics[point[0]];\n      if (!series) {\n        series = { target: point[0], datapoints: [] };\n        this.metrics[point[0]] = series;\n      }\n\n      var time = new Date().getTime();\n      series.datapoints.push([point[1], time]);\n      seriesList.push(series);\n    }\n\n    this.subject.next({\n      data: seriesList,\n      range: { from: moment(startTime), to: moment(endTime) }\n    });\n  }\n}\n\n"]}